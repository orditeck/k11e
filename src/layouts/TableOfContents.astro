---
import type { MarkdownHeading } from "astro";
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const { headings } = Astro.props;

interface MarkdownHeadingWithSubHeadings extends MarkdownHeading {
  subheadings: MarkdownHeading[];
}

function buildToc(headings: MarkdownHeading[]) {
  const toc: MarkdownHeading[] = [];
  const parentHeadings = new Map<Number, MarkdownHeadingWithSubHeadings>();

  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 3) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1)?.subheadings.push(heading);
    }
  });

  return toc;
}

const toc = buildToc(headings);
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<article>
  <header>
    <strong>{t("toc.onThisPage")}</strong>
  </header>
  <nav class="toc">
    <ul>
      {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
    </ul>
  </nav>
</article>

<style is:inline lang="scss">
  nav.toc {
    a {
      text-decoration: none;
      color: var(--pico-secondary-hover);

      &:hover {
        color: var(--pico-secondary);
      }
    }

    ul,
    li {
      list-style: none;
      margin: 0;
      padding: 0;
      display: grid;
      gap: 0.5rem;
    }

    ul ul {
      padding-left: 1rem;
    }

    li a {
      padding-left: 0.5rem;
    }
  }
</style>
