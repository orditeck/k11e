---
import type { MarkdownHeading } from "astro";
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const { headings } = Astro.props;

interface MarkdownHeadingWithSubHeadings extends MarkdownHeading {
  subheadings: MarkdownHeading[];
}

function buildToc(headings: MarkdownHeading[]) {
  const toc: MarkdownHeading[] = [];
  const parentHeadings = new Map<Number, MarkdownHeadingWithSubHeadings>();

  headings.forEach((h) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 3) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1)?.subheadings.push(heading);
    }
  });

  return toc;
}

const toc = buildToc(headings);
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

if (toc.length === 0) {
  return null;
}
---

<div class:list={["hidden", "md:block"]}>
  <header
    class:list={[
      "font-bold",
      "text-gray-900",
      "dark:text-white",
      "mb-2",
      "underline",
      "decoration-slate-200",
      "underline-offset-4",
      "dark:decoration-slate-700",
    ]}
  >
    {t("toc.onThisPage")}
  </header>
  <nav class="">
    <ul class="ml-4">
      {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
    </ul>
  </nav>
</div>
