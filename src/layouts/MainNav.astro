---
import "@fontsource/jersey-15";
import "@fontsource/kalam";
import ThemeToggle from "../components/ThemeToggle/ThemeToggle";
import {
  getLangFromUrl,
  getRouteFromUrl,
  useTranslatedPath,
  useTranslations,
} from "../i18n/utils";

const { transparent = false, hideHome = false } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
const route = getRouteFromUrl(Astro.url);
const otherLang = lang === "fr" ? "en" : "fr";
const homeUrl = lang === "fr" ? `/${lang}` : "/";
const otherLangUrl = lang === "en" ? "fr" : "/";
---

<nav class:list={[{ transparent: transparent }]}>
  <div class="container">
    <a href={homeUrl}>
      <span>k11e</span>
      <small>
        <p>/ Keven Lefebvre</p>
        <p>{t("nav.title")}</p>
      </small>
    </a>
    <ul>
      {
        !hideHome && (
          <li>
            <a href={homeUrl} class="contrast home">
              {t("nav.home")}
            </a>
          </li>
        )
      }
      <li>
        <a href={translatePath("services")} class="contrast"
          >{t("nav.services")}</a
        >
      </li>
      <li>
        <a href={translatePath("about-me")} class="contrast">{t("nav.about")}</a
        >
      </li>
      <li>
        <a
          href={route ? translatePath(route, otherLang) : otherLangUrl}
          class="contrast">{lang === "fr" ? "EN" : "FR"}</a
        >
      </li>
      <li><ThemeToggle client:only="react" /></li>
    </ul>
  </div>
</nav>

<style lang="scss">
  @use "sass:map";
  @use "@picocss/pico/scss/settings" as *;

  nav {
    background: hsl(220 10% 95% / 1);
    margin-bottom: 2rem;
    @at-root html[data-theme="dark"] &:not(.transparent) {
      background: hsl(220 24% 14% / 1);
    }

    .home {
      @media (max-width: map.get($breakpoints, md, breakpoint)) {
        display: none;
      }
    }

    &.transparent {
      background: none;
    }

    .container {
      display: grid;
      grid-template-columns: max-content 1fr;
      justify-items: stretch;
      align-items: center;
      justify-content: space-between;

      > a {
        display: grid;
        grid-auto-flow: column;
        align-items: center;
        text-decoration: none;
        color: var(--pico-contrast);

        span {
          font-size: 250%;
          font-family: "Jersey 15", sans-serif;
        }

        small {
          font-family: "Kalam", sans-serif;
          font-size: 80%;
          padding-left: 0.5rem;
          line-height: 80%;
          padding-top: 0.45rem;

          p {
            margin: 0;
            color: var(--pico-contrast);

            &:last-of-type {
              padding-left: 0.55rem;
              font-size: 60%;
            }
          }
        }

        @media (max-width: map.get($breakpoints, sm, viewport)) {
          grid-auto-flow: row;
          padding: 1rem 0;

          span {
            line-height: 60%;
          }

          small {
            padding-left: 0;
            margin-left: -0.6rem;
          }
        }
      }

      ul,
      li {
        list-style: none;
        margin: 0;
        padding: 0;
      }

      ul {
        display: grid;
        grid-auto-flow: column;
        justify-content: end;
        gap: 0.5rem;

        li {
          padding: 0.5rem;
        }
      }
    }
  }
</style>
